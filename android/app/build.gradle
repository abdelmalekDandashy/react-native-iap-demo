apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    // nodeExecutableAndArgs = ["node"]
    //
    //   The command to run when bundling. By default is 'bundle'
    // bundleCommand = "ram-bundle"
    //
    //   The path to the CLI configuration file. Default is empty.
    // bundleConfig = file(../rn-cli.config.js)
    //
    //   The name of the generated asset file containing your JS bundle
    // bundleAssetName = "MyApplication.android.bundle"
    //
    //   The entry file for bundle generation. Default is 'index.android.js' or 'index.js'
    // entryFile = file("../js/MyApplication.android.js")
    //
    //   A list of extra flags to pass to the 'bundle' commands.
    //   See https://github.com/react-native-community/cli/blob/main/docs/commands.md#bundle
    // extraPackagerArgs = []

    /* Hermes Commands */
    //   The hermes compiler command to run. By default it is 'hermesc'
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    //
    //   The list of flags to pass to the Hermes compiler. By default is "-O", "-output-source-map"
    // hermesFlags = ["-O", "-output-source-map"]

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "cc.fovea.purchase.demo"
    defaultConfig {
        applicationId "cc.fovea.purchase.demo.nc"
        BILLING_KEY: "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuT72zrpUbcQGM4pBfhkIJgyIAYPi1tYZkLYGy1aj412x16Jp9lj3ySpb6AowrApz2/mJoHLiipgdY7kyogcaoccMl9iol8c4avqtzMiHvFYpj0d0rD446WLQdvxuUwxQgWjqRiz0UB87/HsFBuDWt73RKzvB6DqywJMYgi4/lfZcnisdNZxCtb8pgzsmyiVEyCDWh2xY5oNuiDv9Zs90wfPuf4xat3SW3aGHocZ7BYr3xUeASO5kT3evUI8ZiOfDsS9vCiSsU3keDZ1bTKxwDK4UHLT6385kMKmr5UyzxuXWC1UrEf9TNW5CdiFiYaLXw2L/MN26pB6c54rWDmw1KwIDAQAB"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 10006
        versionName "1.0"
        
        missingDimensionStrategy 'store', 'play'
        
        // Add C++ standard configuration
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_STL=c++_shared", "-DCMAKE_CXX_STANDARD=20", "-DCMAKE_CXX_STANDARD_REQUIRED=ON"
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('android-release.keystore')
            storePassword 'ispqom3pm'
            keyAlias 'fovea'
            keyPassword 'ispqom3pm'
        }
        release {
            storeFile file('android-release.keystore')
            storePassword System.getenv('ispqom3pm')
            keyAlias System.getenv('fovea')
            keyPassword System.getenv('ispqom3pm')
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    flavorDimensions "store"
    productFlavors {
        play {
            dimension "store"
            setDefault true
            matchingFallbacks = ['play', 'debug']
        }
    }

    variantFilter { variant ->
        def buildType = variant.buildType.name
        def flavor = variant.flavors[0].name
        
        if (buildType == 'debug' && flavor == 'play') {
            variant.setIgnore(false)
        } else {
            variant.setIgnore(true)
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion")
    implementation("androidx.core:core-ktx:1.9.0")
    implementation("com.android.billingclient:billing:6.1.0")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
